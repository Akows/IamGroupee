<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="ea">
<!-- 관리자 -->
	<!-- 초기설정 확인 및 기본설정 데이터 확인 -->
	<select id="defaultSettings" resultType="com.kh.iag.ea.entity.SettingsDto">
		SELECT A.SEC_MIN SECMINA,
				B.SEC_MIN SECMINB,
				F.FORMAT_YEAR,
				F.FORMAT_DEPT,
				F.FORMAT_FORM
		FROM EA_SEC_A A, EA_SEC_B B, EA_FORMAT F
	</select>
	
	<!-- 문서 초기 설정 업데이트 -->
	<insert id="insertInitialSettings1" parameterType="com.kh.iag.ea.entity.SettingsDto">
		INSERT INTO EA_SEC_A (SEC_GRADE, SEC_MIN) VALUES (DEFAULT, ${secMinA})
	</insert>
	<insert id="insertInitialSettings2" parameterType="com.kh.iag.ea.entity.SettingsDto">
		INSERT INTO EA_SEC_B (SEC_GRADE, SEC_MIN) VALUES (DEFAULT, ${secMinB})
	</insert>
	<insert id="insertInitialSettings3" parameterType="com.kh.iag.ea.entity.SettingsDto">
		INSERT INTO EA_FORMAT (FORMAT_NO, FORMAT_YEAR, FORMAT_DEPT, FORMAT_FORM) VALUES (1, #{formatYear}, #{formatDept}, #{formatForm})
	</insert>
	
	<!-- 직위 데이터 -->
	<select id="positionValues" resultType="com.kh.iag.ea.entity.PositionDto">
		SELECT * FROM POSITION ORDER BY POSITION_LEVEL
	</select>
	
	<!-- 문서 설정 업데이트 -->
	<update id="updateSettings1" parameterType="com.kh.iag.ea.entity.SettingsDto">
		UPDATE EA_SEC_A SET SEC_MIN = ${secMinA} WHERE SEC_GRADE = 'A'
	</update>
	<update id="updateSettings2" parameterType="com.kh.iag.ea.entity.SettingsDto">
		UPDATE EA_SEC_B SET SEC_MIN = ${secMinB} WHERE SEC_GRADE = 'B'
	</update>
	<update id="updateSettings3" parameterType="com.kh.iag.ea.entity.SettingsDto">
		UPDATE EA_FORMAT SET FORMAT_YEAR = #{formatYear}, FORMAT_DEPT = #{formatDept}, FORMAT_FORM = #{formatForm} WHERE FORMAT_NO = 1
	</update>
	
	<!--카테고리 데이터 -->
	<select id="categoryValues" resultType="com.kh.iag.ea.entity.CategoryDto">
		SELECT * FROM EA_CATEGORY ORDER BY CATEGORY_NO
	</select>
	
	<!-- 양식 데이터 -->
	<select id="formValues" resultType="eaform">
		SELECT * 
		FROM EA_FORM F 
		JOIN EA_CATEGORY C ON(F.CATEGORY_NO = C.CATEGORY_NO)
	</select>
	
	<!-- 양식관리 카테고리 추가 -->
	<insert id="insertFormCategory">
		INSERT INTO EA_CATEGORY
		(CATEGORY_NO, CATEGORY_NAME)
		VALUES
		(SEQ_EA_CATEGORY_NO.NEXTVAL, '새로운 카테고리')
	</insert>
	
	<!-- 새로 추가한 카테고리 정보 가져오기 -->
	<select id="selectLatestFormCategory" resultType="com.kh.iag.ea.entity.CategoryDto">
		SELECT * FROM (SELECT ROWNUM AS RNUM, c.* FROM (SELECT * FROM EA_CATEGORY ORDER BY CATEGORY_NO DESC) c) WHERE RNUM = 1
	</select>
	
	<!-- 카테고리 삭제 -->
	<delete id="deleteFormCategory" parameterType="string">
		DELETE FROM EA_CATEGORY WHERE CATEGORY_NO = ${categoryNo}
	</delete>
	
	<!-- 양식관리 양식 추가  -->
	<insert id="insertForm" parameterType="string">
		INSERT INTO EA_FORM 
		(
			FORM_NO
			, FORM_TITLE
			, FORM_CONTENT
			, FORM_YEARS
			, CATEGORY_NO
		)
		VALUES 
		(
			SEQ_EA_FORM_NO.NEXTVAL
			, '새로운 양식'
			, '&lt;h1 style="text-align:center"&gt;새로운 양식&lt;/h1&gt;'
			, 1
			, ${categoryNo}
		)
	</insert>
	
	<!-- 새로 추가한 양식 정보 가져오기 -->
	<select id="selecLatestForm" resultType="eaform" >
		SELECT * FROM (SELECT ROWNUM AS RNUM, f.* FROM (SELECT * FROM EA_FORM ORDER BY FORM_NO DESC) f) WHERE RNUM = 1
	</select>
	
	<!-- 양식 삭제 -->
	<delete id="deleteForm" parameterType="string">
		DELETE FROM EA_FORM WHERE FORM_NO = ${formNo}
	</delete>
	
	<!-- 양식 카테고리 이름 변경 -->
	<update id="updateCategoryName" parameterType="com.kh.iag.ea.entity.CategoryDto">
		UPDATE EA_CATEGORY SET CATEGORY_NAME = #{categoryName} WHERE CATEGORY_NO = ${categoryNo}
	</update>
	
	<!-- 양식 이름 변경 -->
	<update id="updateFormName" parameterType="eaform">
		UPDATE EA_FORM SET FORM_TITLE = #{formTitle} WHERE FORM_NO = ${formNo}
	</update>
	
	<!-- 양식 수정 페이지 선택 양식 default 데이터 -->
	<select id="formValue" parameterType="eaform" resultType="eaform">
		SELECT * FROM EA_FORM WHERE FORM_NO = ${formNo}
	</select>
	
	<!-- 양식 수정 -->
	<update id="editForm" parameterType="eaform">
		UPDATE EA_FORM 
		SET
		    FORM_TITLE = #{formTitle},
		    FORM_CONTENT = #{formContent},
		    FORM_YEARS = ${formYears},
		    CATEGORY_NO = ${categoryNo}
		WHERE FORM_NO = ${formNo}
	</update>
	
	<!-- 문서관리 전체 문서 데이터 -->
	<select id="preservedDocs" resultType="eadocs">
		SELECT * FROM
		(
		    SELECT D.DOC_SEP, D.DOC_NO, F.FORM_TITLE, D.DOC_TITLE, D.DOC_FINISH, DT.DEPARTMENT_NAME FROM EA_DOCUMENT D
		    JOIN EA_FORM F ON(D.FORM_NO = F.FORM_NO)
		    JOIN IAG_USER U ON(D.USER_NO = U.USER_NO)
		    JOIN DEPARTMENT DT ON(U.DEPARTMENT_NO = DT.DEPARTMENT_NO)
		)
		WHERE DOC_SEP = 'Y'
		ORDER BY DOC_FINISH ASC
	</select>
	
	<!-- 문서관리 참조자테이블 먼저 삭제 -->
	<delete id="deleteDocRef" parameterType="string">
		DELETE FROM EA_REF
		WHERE DOC_NO = #{s}
	</delete>
	
	<!-- 문서관리 문서테이블 삭제 -->
	<select id="deleteDoc" parameterType="string">
		DELETE FROM EA_DOCUMENT
		WHERE DOC_NO = #{s}
	</select>
<!-- 사용자 -->
<!-- 기안 #################################################################################################### -->
	<!-- 기안 작성 페이지 양식 데이터 -->
	<select id="signupFormValue" parameterType="eaform" resultType="eaform">
		SELECT * FROM EA_FORM WHERE FORM_NO = ${formNo}
	</select>
	
	<!-- 기안 작성 페이지 부서 데이터 -->
	<select id="deptValues" resultType="com.kh.iag.ea.entity.DeptDto">
		SELECT DEPARTMENT_NO, DEPARTMENT_NAME FROM DEPARTMENT
	</select>
	
	<!-- 기안 작성 페이지 사원 데이터 -->
	<select id="userValues" parameterType="string" resultType="com.kh.iag.ea.entity.EAUserDto">
		SELECT A.USER_NO, A.NAME, A.DEPARTMENT_NO, A.DEPARTMENT_NAME, P.POSITION_NO, P.POSITION_NAME, P.POSITION_LEVEL 
		FROM
		(
		    SELECT U.USER_NO, U.NAME, D.DEPARTMENT_NO, D.DEPARTMENT_NAME, U.POSITION_NO
		    FROM IAG_USER U 
		    JOIN DEPARTMENT D ON(U.DEPARTMENT_NO = D.DEPARTMENT_NO)
		    WHERE ACTIVITY_YN = 'Y' AND USER_NO != #{userNo}
		) A 
		JOIN POSITION P ON(A.POSITION_NO = P.POSITION_NO)
		ORDER BY P.POSITION_LEVEL
	</select>
	
	<!-- 문서보안 데이터 A -->
	<select id="selectSecADetail" resultType="com.kh.iag.ea.entity.SecurityDto">
		SELECT * FROM EA_SEC_A S
		JOIN POSITION P ON(P.POSITION_LEVEL = S.SEC_MIN)
	</select>
	
	<!-- 문서보안 데이터 B -->
	<select id="selectSecBDetail" resultType="com.kh.iag.ea.entity.SecurityDto">
		SELECT * FROM EA_SEC_B S
		JOIN POSITION P ON(P.POSITION_LEVEL = S.SEC_MIN)
	</select>
	
	
	<!-- 기안 신청시 결재선번호 테이블 인서트 -->
	<insert id="insertProcessNo" parameterType="com.kh.iag.ea.entity.ProcessDto">
		INSERT INTO EA_PROCESS_NO
		(
			PROC_NO,
			DOC_NO
		)
		VALUES
		(
			SEQ_EA_PROCESS_NO.NEXTVAL,
			#{docNo}||SEQ_EA_DOC_NO.NEXTVAL
		)
	</insert>
	
	<!-- 기안 신청시 위에서 생성한 결재선번호 데이터 셀렉트 -->
	<select id="selectProcessNo" resultType="com.kh.iag.ea.entity.ProcessDto">
		SELECT PROC_NO, DOC_NO FROM (SELECT ROWNUM AS RNUM, p.* FROM (SELECT * FROM EA_PROCESS_NO ORDER BY PROC_NO DESC) p) WHERE RNUM = 1
	</select>
	
	<!-- 기안 신청시 결재선 테이블 인서트 -->
	<insert id="insertProcess" parameterType="com.kh.iag.ea.entity.ProcessDto">
		INSERT INTO EA_PROCESS
		(
			PROC_NO,
		    USER_NO,
		    PROC_SEP,
		    PROC_SEQ,
		    PROC_CNT
		)
		VALUES
		(
			${procNo},
			#{userNo},
			${procSep},
			${procSeq},
			${procCnt}
		)
	</insert>
	
	<!-- 기안 신청시 문서 테이블 인서트 -->
	<insert id="insertDocument" parameterType="eadocs">
		INSERT INTO EA_DOCUMENT
		(
			DOC_NO,
			USER_NO,
			FORM_NO,
			PROC_NO,
			DOC_TITLE,
			DOC_CONTENT,
			DOC_SLV,
			DOC_MAKE,
			DOC_CLOSE,
			DOC_SEP
		)
		VALUES
		(
			#{docNo},
			#{userNo},
			${formNo},
			${procNo},
			#{docTitle},
			#{docContent},
			#{docSlv},
			SYSDATE,
			#{docClose},
			'N'
		)
	</insert>
	<!-- 연차/휴가 category 있는지 확인 -->
	<select id="selectCategoryLeave" parameterType="com.kh.iag.ea.entity.SignupDto" resultType="com.kh.iag.ea.entity.CategoryDto">
		SELECT * FROM EA_CATEGORY WHERE CATEGORY_NO = ${categoryNo}
	</select>
	
	<!-- 연차/휴가 category insert -->
	<insert id="insertCategoryLeave" parameterType="com.kh.iag.ea.entity.SignupDto">
		INSERT INTO EA_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (${categoryNo}, #{categoryName})
	</insert>
	
	<!-- 연차/휴가 form 있는지 확인 -->
	<select id="selectProcessLeave" parameterType="com.kh.iag.ea.entity.SignupDto" resultType="com.kh.iag.ea.entity.FormDto">
		SELECT * FROM EA_FORM WHERE FORM_NO = ${formNo}
	</select>
	
	<!-- 연차/휴가 form insert -->
	<insert id="insertFormLeave" parameterType="com.kh.iag.ea.entity.SignupDto">
		INSERT INTO EA_FORM 
		(
			FORM_NO, 
			FORM_TITLE, 
			FORM_CONTENT, 
			FORM_YEARS, 
			CATEGORY_NO
		) 
		VALUES 
		(
			${formNo},
			#{formTitle},
			'연차/휴가',
			${formYears},
			${categoryNo}
		)
	</insert>
	
	<!-- 연차기안신청 -->
	<insert id="insertDocumentAlv" parameterType="eadocs">
		
		INSERT INTO EA_DOCUMENT
		(
			DOC_NO,
			USER_NO,
			FORM_NO,
			PROC_NO,
			DOC_TITLE,
			DOC_CONTENT,
			DOC_SLV,
			DOC_MAKE,
			DOC_CLOSE,
			DOC_SEP,
			LV_CHECK,
			LV_CODE,
			ALV_APPLI,
			ALV_START,
			ALV_END,
			ALV_REASON
		)
		VALUES
		(
			#{docNo},
			#{userNo},
			${formNo},
			${procNo},
			#{docTitle},
			'연차신청',
			#{docSlv},
			SYSDATE,
			#{docClose},
			'N',
			#{lvCheck},
			#{lvCode},
			SYSDATE,
			#{alvStart},
			#{alvEnd},
			#{alvReason}
		)
	</insert>
	
	<!-- 휴가기안신청 -->
	<insert id="insertDocumentLv" parameterType="eadocs">
		
		INSERT INTO EA_DOCUMENT
		(
			DOC_NO,
			USER_NO,
			FORM_NO,
			PROC_NO,
			DOC_TITLE,
			DOC_CONTENT,
			DOC_SLV,
			DOC_MAKE,
			DOC_CLOSE,
			DOC_SEP,
			LV_CHECK,
			LV_CODE,
			LV_APPLI,
			LV_START,
			LV_END,
			LV_REASON
		)
		VALUES
		(
			#{docNo},
			#{userNo},
			${formNo},
			${procNo},
			#{docTitle},
			'휴가신청',
			#{docSlv},
			SYSDATE,
			#{docClose},
			'N',
			#{lvCheck},
			#{lvCode},
			SYSDATE,
			#{lvStart},
			#{lvEnd},
			#{lvReason}
			
		)
	</insert>
	
	<!-- 기안 작성시 참조자 테이블 인서트 -->
	<insert id="insertRef" parameterType="com.kh.iag.ea.entity.RefDto">
		INSERT INTO EA_REF
		(
			REF_NO,
			DOC_NO
		)
		VALUES
		(
			#{refNo},
			#{docNo}
		)
	</insert>
	
	<!-- 기안 작성시 작성한 문서 상세 페이지 문서 데이터 -->
	<select id="selectDocument" parameterType="com.kh.iag.ea.entity.ProcessDto" resultType="eadocs">
		SELECT D.*, U.NAME, P.POSITION_NAME, DP.DEPARTMENT_NAME, F.FORM_TITLE
		FROM 
		(
			SELECT * FROM EA_DOCUMENT
			WHERE DOC_NO = #{docNo} AND DOC_SEP = 'N'
		) D
		JOIN IAG_USER U ON(D.USER_NO = U.USER_NO)
		JOIN POSITION P ON(U.POSITION_NO = P.POSITION_NO)
		JOIN DEPARTMENT DP ON(U.DEPARTMENT_NO = DP.DEPARTMENT_NO)
		JOIN EA_FORM F ON(D.FORM_NO = F.FORM_NO)
	</select>
	
	<!-- 기안문서리스트에서 반려/협의요청 문서 상세보기 -->
	<select id="selectRejectedDocument" parameterType="com.kh.iag.ea.entity.ProcessDto" resultType="eadocs">
		SELECT PC.PROC_REJECTED, D.*, U.NAME, P.POSITION_NAME, DP.DEPARTMENT_NAME, F.FORM_TITLE
		FROM
		(
		    SELECT PROC_NO, PROC_REJECTED FROM EA_PROCESS
		    WHERE PROC_NO = (SELECT PROC_NO FROM EA_DOCUMENT WHERE DOC_NO = #{docNo}) 
		      AND PROC_SEQ IN (2, 3)
		) PC
		JOIN EA_DOCUMENT D ON(PC.PROC_NO = D.PROC_NO)
		JOIN IAG_USER U ON(D.USER_NO = U.USER_NO)
		JOIN POSITION P ON(U.POSITION_NO = P.POSITION_NO)
		JOIN DEPARTMENT DP ON(U.DEPARTMENT_NO = DP.DEPARTMENT_NO)
		JOIN EA_FORM F ON(D.FORM_NO = F.FORM_NO)
	</select>
	
	<!-- 기안 작성시 작성한 문서 상세 페이지 결재선 데이터 -->
	<select id="selectProcess" parameterType="com.kh.iag.ea.entity.ProcessDto" resultType="com.kh.iag.ea.entity.ProcessDto">
		SELECT P.*, U.NAME, PS.POSITION_NAME, DP.DEPARTMENT_NAME
		FROM 
		(
			SELECT * 
			FROM EA_PROCESS
			WHERE PROC_NO = ${procNo}
		) P
		JOIN IAG_USER U ON(P.USER_NO = U.USER_NO)
		JOIN POSITION PS ON(U.POSITION_NO = PS.POSITION_NO)
		JOIN DEPARTMENT DP ON(U.DEPARTMENT_NO = DP.DEPARTMENT_NO)
		ORDER BY PROC_SEP ASC
	</select>
	
	
	<!-- 기안리스트조회 내가 기안한 문서 리스트 데이터 -->
	<select id="signupList" parameterType="hashMap" resultType="eadocs">
		SELECT * FROM
		(
		    SELECT ROWNUM RN, T.*
		    FROM
		    (
			    SELECT D.*, U.NAME, P.POSITION_NAME, DP.DEPARTMENT_NAME, F.FORM_TITLE
			    FROM 
			    (
			        SELECT * FROM EA_DOCUMENT
			        WHERE USER_NO = #{userNo} AND DOC_SEP = 'N'
			        ORDER BY DOC_MAKE DESC
			    ) D
			    JOIN IAG_USER U ON(D.USER_NO = U.USER_NO)
			    JOIN POSITION P ON(U.POSITION_NO = P.POSITION_NO)
			    JOIN DEPARTMENT DP ON(U.DEPARTMENT_NO = DP.DEPARTMENT_NO)
			    JOIN EA_FORM F ON(D.FORM_NO = F.FORM_NO)
		    ) T
		)
		WHERE RN BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<!-- 필터링조회에 사용할 기안리스트 -->
	<select id="signupListForFilter" parameterType="string" resultType="eadocs">
	    SELECT D.*, U.NAME, P.POSITION_NAME, DP.DEPARTMENT_NAME, F.FORM_TITLE
	    FROM 
	    (
	        SELECT * FROM EA_DOCUMENT
	        WHERE USER_NO = #{userNo} AND DOC_SEP = 'N'
	        ORDER BY DOC_MAKE DESC
	    ) D
	    JOIN IAG_USER U ON(D.USER_NO = U.USER_NO)
	    JOIN POSITION P ON(U.POSITION_NO = P.POSITION_NO)
	    JOIN DEPARTMENT DP ON(U.DEPARTMENT_NO = DP.DEPARTMENT_NO)
	    JOIN EA_FORM F ON(D.FORM_NO = F.FORM_NO)
	</select>
	
	<!-- 기안리스트조회 결재선 정의 데이터 -->
	<select id="processList" parameterType="string" resultType="com.kh.iag.ea.entity.ProcessDto">
		SELECT D.DOC_NO, PC.*
		FROM 
		(
		    SELECT * FROM EA_DOCUMENT
		    WHERE USER_NO = #{userNo} AND DOC_SEP = 'N'
		    ORDER BY DOC_MAKE DESC
		) D
		JOIN IAG_USER U ON(D.USER_NO = U.USER_NO)
		JOIN POSITION P ON(U.POSITION_NO = P.POSITION_NO)
		JOIN DEPARTMENT DP ON(U.DEPARTMENT_NO = DP.DEPARTMENT_NO)
		JOIN EA_FORM F ON(D.FORM_NO = F.FORM_NO)
		JOIN EA_PROCESS PC ON(D.PROC_NO = PC.PROC_NO)
	</select>
	
	<!-- 기안리스트조회 로우 카운트 -->
	<select id="getSignupListCnt" parameterType="string" resultType="int">
		SELECT COUNT(D.DOC_NO)
		FROM 
		(
		    SELECT * FROM EA_DOCUMENT
		    WHERE USER_NO = #{userNo} AND DOC_SEP = 'N'
		    ORDER BY DOC_MAKE DESC
		) D
		JOIN IAG_USER U ON(D.USER_NO = U.USER_NO)
		JOIN POSITION P ON(U.POSITION_NO = P.POSITION_NO)
		JOIN DEPARTMENT DP ON(U.DEPARTMENT_NO = DP.DEPARTMENT_NO)
		JOIN EA_FORM F ON(D.FORM_NO = F.FORM_NO)
	</select>
	
	<!-- 반려/협의 문서 삭제하기(DOC_SEP = 'Y'로 업데이트) -->
	<update id="deleteSignupDoc" parameterType="string">
		UPDATE EA_DOCUMENT
		SET
		DOC_SEP = 'Y'
		WHERE
		DOC_NO = #{docNo}	
	</update>
	
	<!-- 반려/협의 문서 재기안하기 문서테이블 재기안 내용 업데이트 -->
	<update id="reSignup" parameterType="eadocs">
		UPDATE EA_DOCUMENT
		SET
			DOC_TITLE = #{docTitle},
			DOC_CONTENT = #{docContent},
			DOC_MAKE = SYSDATE,
			DOC_CLOSE = #{docClose},
			DOC_STAGENAME = '대기'
		WHERE DOC_NO = #{docNo}
	</update>
	
	<!-- 반려/협의 문서중 연차문서 재기안하기 -->
	<update id="reSignupAlv" parameterType="eadocs">
		UPDATE EA_DOCUMENT
		SET
			DOC_TITLE = #{docTitle},
			DOC_MAKE = SYSDATE,
			DOC_CLOSE = #{docClose},
			DOC_STAGENAME = '대기',
			LV_CODE = #{lvCode},
			ALV_APPLI = SYSDATE,
			ALV_START = #{alvStart},
			ALV_END = #{alvEnd},
			ALV_REASON = #{alvReason}
		WHERE DOC_NO = #{docNo}
	</update>
	
	<!-- 반려/협의 문서중 휴가문서 재기안하기 -->
	<update id="reSignupLv" parameterType="eadocs">
		UPDATE EA_DOCUMENT
		SET
			DOC_TITLE = #{docTitle},
			DOC_MAKE = SYSDATE,
			DOC_CLOSE = #{docClose},
			DOC_STAGENAME = '대기',
			LV_CODE = #{lvCode},
			LV_APPLI = SYSDATE,
			LV_START = #{lvStart},
			LV_END = #{lvEnd},
			LV_REASON = #{lvReason}
		WHERE DOC_NO = #{docNo}
	</update>
	
	<!-- 반려/합의 문서 재기안하기 결재선테이블 반려/협의자 PROC_SEQ 0으로 업데이트 -->
	<update id="reSignupUpdateProcess" parameterType="string">
		UPDATE EA_PROCESS
		SET
			PROC_SEQ = 0
		WHERE PROC_NO = ${procNo} AND PROC_SEQ IN(2, 3)
	</update>
	
<!-- 결재 #################################################################################################### -->
	<!-- 결재리스트조회 로우 카운트 -->
	<select id="getApprListCnt" parameterType="string" resultType="int">
		SELECT COUNT(DOC_NO) 
		FROM EA_DOCUMENT 
		WHERE PROC_NO IN(SELECT PROC_NO FROM EA_PROCESS WHERE USER_NO = #{userNo}) 
		  AND DOC_SEP = 'N'
	</select>
	
	<!-- 결재리스트조회 내가 결재할 문서 리스트 데이터 -->
	<select id="apprList" parameterType="hashMap" resultType="eadocs">
		SELECT * FROM
		(
		    SELECT ROWNUM RN, T.*
		    FROM
		    (
			    SELECT D.*, U.NAME, P.POSITION_NAME, DP.DEPARTMENT_NAME, F.FORM_TITLE
			    FROM 
			    (
			        SELECT * 
			        FROM EA_DOCUMENT 
			        WHERE PROC_NO IN(SELECT PROC_NO FROM EA_PROCESS WHERE USER_NO = #{userNo}) 
			          AND DOC_SEP = 'N' 
			        ORDER BY DOC_MAKE DESC
			    ) D
			    JOIN IAG_USER U ON(D.USER_NO = U.USER_NO)
			    JOIN POSITION P ON(U.POSITION_NO = P.POSITION_NO)
			    JOIN DEPARTMENT DP ON(U.DEPARTMENT_NO = DP.DEPARTMENT_NO)
			    JOIN EA_FORM F ON(D.FORM_NO = F.FORM_NO)
		    ) T
		)
		WHERE RN BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<!-- 결재리스트조회 필터링  -->
	<select id="apprListForFilter" parameterType="string" resultType="eadocs">
	    SELECT D.*, U.NAME, P.POSITION_NAME, DP.DEPARTMENT_NAME, F.FORM_TITLE
	    FROM 
	    (
	        SELECT * 
	        FROM EA_DOCUMENT 
	        WHERE PROC_NO IN(SELECT PROC_NO FROM EA_PROCESS WHERE USER_NO = #{userNo}) 
	          AND DOC_SEP = 'N' 
	        ORDER BY DOC_MAKE DESC
	    ) D
	    JOIN IAG_USER U ON(D.USER_NO = U.USER_NO)
	    JOIN POSITION P ON(U.POSITION_NO = P.POSITION_NO)
	    JOIN DEPARTMENT DP ON(U.DEPARTMENT_NO = DP.DEPARTMENT_NO)
	    JOIN EA_FORM F ON(D.FORM_NO = F.FORM_NO)
	</select>
	
	<!-- 결재리스트조회 모든 문서의 결재선 정보 -->
	<select id="processListForApprAll" resultType="com.kh.iag.ea.entity.ProcessDto">
		SELECT D.DOC_NO, PC.*
		FROM 
		(
		    SELECT * FROM EA_DOCUMENT
		    WHERE DOC_SEP = 'N'
		    ORDER BY DOC_MAKE DESC
		) D
		JOIN IAG_USER U ON(D.USER_NO = U.USER_NO)
		JOIN POSITION P ON(U.POSITION_NO = P.POSITION_NO)
		JOIN DEPARTMENT DP ON(U.DEPARTMENT_NO = DP.DEPARTMENT_NO)
		JOIN EA_FORM F ON(D.FORM_NO = F.FORM_NO)
		JOIN EA_PROCESS PC ON(D.PROC_NO = PC.PROC_NO)
	</select>
	
	<!-- 결재리스트조회 내가 결재할 결재선 정보 -->
	<select id="processListForApprUser" parameterType="string" resultType="com.kh.iag.ea.entity.ProcessDto">
		SELECT *
		FROM
		(
		    SELECT D.DOC_NO, PC.*
		    FROM 
		    (
		        SELECT * FROM EA_DOCUMENT
		        WHERE DOC_SEP = 'N'
		        ORDER BY DOC_MAKE DESC
		    ) D
		    JOIN IAG_USER U ON(D.USER_NO = U.USER_NO)
		    JOIN POSITION P ON(U.POSITION_NO = P.POSITION_NO)
		    JOIN DEPARTMENT DP ON(U.DEPARTMENT_NO = DP.DEPARTMENT_NO)
		    JOIN EA_FORM F ON(D.FORM_NO = F.FORM_NO)
		    JOIN EA_PROCESS PC ON(D.PROC_NO = PC.PROC_NO)
		    )
		WHERE USER_NO = #{userNo}
	</select>
	
	<!-- 결재상세페이지 결재상태 업데이트 -->
	<update id="updateProcessState" parameterType="com.kh.iag.ea.entity.ProcessDto">
		UPDATE EA_PROCESS
		SET
			PROC_SEQ = ${procSeq},
			PROC_REJECTED = #{procRejected}
		WHERE PROC_NO = ${procNo} AND USER_NO = #{userNo}
	</update>
	
	<!-- 반려/협의일시 EA_DOCUMENT DOC_STAGENAME UPDATE -->
	<update id="updateStageName" parameterType="com.kh.iag.ea.entity.ProcessDto">
		UPDATE EA_DOCUMENT
		SET
			<if test="procSeq == 2">
			DOC_STAGENAME = '반려'
			</if>
			<if test="procSeq == 3">
			DOC_STAGENAME = '협의'			
			</if>			
		WHERE PROC_NO = ${procNo}
	</update>
	
	<!-- 업데이트한 결재선이 마지막 결재선인지 확인 -->
	<select id="checkingLastProcess" parameterType="com.kh.iag.ea.entity.ProcessDto" resultType="com.kh.iag.ea.entity.ProcessDto">
		SELECT * 
		FROM EA_PROCESS
		WHERE PROC_NO = ${procNo}
		  AND USER_NO = #{userNo}
	</select>
	
	<!-- 결재시 최종결재이거나 전결일때 EA_DOCUMENT 승인여부 컬럼 DOC_SEP = 'Y'로 바꾸기  -->
	<update id="updateDocumentSep" parameterType="com.kh.iag.ea.entity.ProcessDto">
		UPDATE EA_DOCUMENT
		SET
			DOC_FINISH = SYSDATE,
			DOC_SEP = 'Y',
			DOC_STAGENAME = '승인'
		WHERE PROC_NO = ${procNo}
	</update>
	
	<!-- 결재시 승인(1)이면 EA_DOCUMENT DOC_STAGE +1 -->
	<update id="updateDocumentStageWhenOne" parameterType="com.kh.iag.ea.entity.ProcessDto">
		UPDATE EA_DOCUMENT
		SET
			DOC_STAGE = DOC_STAGE + 1
		WHERE PROC_NO = ${procNo}
	</update>
	
	<!-- 결재시 전결(4)이면 EA_DOCUMENT DOC_STAGE EA_PROCESS PROC_CNT + 1 -->
	<update id="updateDocumentStageWhenFour" parameterType="com.kh.iag.ea.entity.ProcessDto">
		UPDATE EA_DOCUMENT
		SET
			DOC_STAGE = ${procCnt} + 1
		WHERE PROC_NO = ${procNo}
	</update>
	

<!-- 참조 #################################################################################################### -->
	<!-- 참조문서조회 리스트 로우 개수 조회 -->
	<select id="getRefListCnt" parameterType="string" resultType="int">
		SELECT COUNT(DOC_NO) FROM EA_REF WHERE REF_NO = #{userNo}
	</select>
	
	<!-- 참조문서조회 참조문서들 데이터 가져오기 -->
	<select id="refList" parameterType="hashMap" resultType="eadocs">
		SELECT * FROM
		(
		    SELECT ROWNUM RN, T.*
		    FROM
		    (
		        SELECT D.*, F.FORM_TITLE
		        FROM 
		        (
		            SELECT * FROM EA_DOCUMENT
		            WHERE DOC_SEP = 'N' AND DOC_NO IN (SELECT DOC_NO FROM EA_REF WHERE REF_NO = #{userNo})
		            ORDER BY DOC_MAKE DESC
		        ) D
		        JOIN EA_FORM F ON(D.FORM_NO = F.FORM_NO)
		    ) T
		)
		WHERE RN BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<!-- 참조문서조회 필터링 -->
	<select id="refListForFilter" parameterType="string" resultType="eadocs">
		SELECT D.*, F.FORM_TITLE
        FROM 
        (
            SELECT * FROM EA_DOCUMENT
            WHERE DOC_SEP = 'N' AND DOC_NO IN (SELECT DOC_NO FROM EA_REF WHERE REF_NO = #{userNo})
            ORDER BY DOC_MAKE DESC
        ) D
        JOIN EA_FORM F ON(D.FORM_NO = F.FORM_NO)
	</select>
	
	<!-- 참조문서조회 결재처리절차 비교를 위한 데이터 가져오기 -->
	<select id="processListRef" parameterType="string" resultType="com.kh.iag.ea.entity.ProcessDto">
		SELECT D.DOC_NO, PC.*
		FROM 
		(
		    SELECT * FROM EA_DOCUMENT
		    WHERE DOC_SEP = 'N' AND DOC_NO IN (SELECT DOC_NO FROM EA_REF WHERE REF_NO = #{userNo})
		    ORDER BY DOC_MAKE DESC
		) D
		JOIN IAG_USER U ON(D.USER_NO = U.USER_NO)
		JOIN POSITION P ON(U.POSITION_NO = P.POSITION_NO)
		JOIN DEPARTMENT DP ON(U.DEPARTMENT_NO = DP.DEPARTMENT_NO)
		JOIN EA_FORM F ON(D.FORM_NO = F.FORM_NO)
		JOIN EA_PROCESS PC ON(D.PROC_NO = PC.PROC_NO)
	</select>
	
<!-- 전체 #################################################################################################### -->
	<!-- 전체문서조회 로그인한 유저의 기안문서, 결재문서, 참고문서 데이터 -->
	<select id="selectRelatedDocs" parameterType="string" resultType="eadocs">
		SELECT * FROM
		(
			SELECT * 
			FROM EA_DOCUMENT
			WHERE USER_NO = #{userNo} AND DOC_SEP = 'Y'
			
			UNION
			
			SELECT * 
			FROM EA_DOCUMENT 
			WHERE PROC_NO IN(SELECT PROC_NO FROM EA_PROCESS WHERE USER_NO = #{userNo}) 
			  AND DOC_SEP = 'Y'
			
			UNION
			
			SELECT * FROM EA_DOCUMENT
			WHERE DOC_SEP = 'Y' AND DOC_NO IN (SELECT DOC_NO FROM EA_REF WHERE REF_NO = #{userNo})
		) D
		JOIN EA_FORM F ON(D.FORM_NO = F.FORM_NO)
		JOIN IAG_USER U ON(D.USER_NO = U.USER_NO)
		JOIN DEPARTMENT DT ON(U.DEPARTMENT_NO = DT.DEPARTMENT_NO)
		ORDER BY DOC_MAKE DESC
	</select>
	
	<!-- SEC_A 설정정보 -->
	<select id="selectSecA" resultType="int">
		SELECT SEC_MIN FROM EA_SEC_A
	</select>
	
	
	<!-- SEC_A 설정정보 -->
	<select id="selectSecB" resultType="int">
		SELECT SEC_MIN FROM EA_SEC_B
	</select>
	
	<!-- 로그인유저가 기안,결재,참조 문서가 아닌 문서 -->
	<select id="selectNotRelatedDocs" parameterType="string" resultType="eadocs">
		SELECT * FROM
		(
			SELECT * FROM EA_DOCUMENT WHERE DOC_SEP = 'Y'
	
			MINUS
			
			(
			SELECT * 
			FROM EA_DOCUMENT
			WHERE USER_NO = #{userNo} AND DOC_SEP = 'Y'
			
			UNION
			
			SELECT * 
			FROM EA_DOCUMENT 
			WHERE PROC_NO IN(SELECT PROC_NO FROM EA_PROCESS WHERE USER_NO = #{userNo}) 
			  AND DOC_SEP = 'Y'
			
			UNION
			
			SELECT * FROM EA_DOCUMENT
			WHERE DOC_SEP = 'Y' AND DOC_NO IN (SELECT DOC_NO FROM EA_REF WHERE REF_NO = #{userNo})
			)
		) D
		JOIN EA_FORM F ON(D.FORM_NO = F.FORM_NO)
		JOIN IAG_USER U ON(D.USER_NO = U.USER_NO)
		JOIN DEPARTMENT DT ON(U.DEPARTMENT_NO = DT.DEPARTMENT_NO)
		ORDER BY DOC_MAKE DESC
	</select>
	
	<!-- 부서정보 데이터 -->
	<select id="departmentList" resultType="dept">
		SELECT * FROM DEPARTMENT ORDER BY DEPARTMENT_NO
	</select>
	
	<!-- 전체문서조회 상세 데이터 -->
	<select id="selectDocumentEntire" parameterType="com.kh.iag.ea.entity.ProcessDto" resultType="eadocs">
		SELECT D.*, U.NAME, P.POSITION_NAME, DP.DEPARTMENT_NAME, F.FORM_TITLE
		FROM 
		(
			SELECT * FROM EA_DOCUMENT
			WHERE DOC_NO = #{docNo} AND DOC_SEP = 'Y'
		) D
		JOIN IAG_USER U ON(D.USER_NO = U.USER_NO)
		JOIN POSITION P ON(U.POSITION_NO = P.POSITION_NO)
		JOIN DEPARTMENT DP ON(U.DEPARTMENT_NO = DP.DEPARTMENT_NO)
		JOIN EA_FORM F ON(D.FORM_NO = F.FORM_NO)
	</select>
	
<!-- etc ####################################################################################################-->
	<!-- 메인화면 상신한 문서 개수 -->
	<select id="countOfSignup" parameterType="string" resultType="int">
		SELECT COUNT(DOC_NO) FROM EA_DOCUMENT WHERE USER_NO = #{userNo}
	</select>
	<!-- 메인화면 결재할 문서 개수 -->
	<select id="countOfAppr" parameterType="string" resultType="int">
		SELECT COUNT(PROC_NO) FROM EA_PROCESS WHERE USER_NO = #{userNo}
	</select>
	<!-- 메인화면 참조할 문서 개수 -->
	<select id="countOfRefer" parameterType="string" resultType="int">
		SELECT COUNT(DOC_NO) FROM EA_REF WHERE REF_NO = #{userNo}
	</select>
	<!-- 메인화면 대기중인 문서 개수 -->
	<select id="countOfWait" parameterType="string" resultType="int">
		SELECT COUNT(DOC_NO) FROM EA_DOCUMENT
		WHERE USER_NO = #{userNo}
		  AND DOC_SEP = 'N' 
		  AND DOC_STAGE = 1
	</select>
	<!-- 메인화면 진행중인 문서 개수 -->
	<select id="countOfProg" parameterType="string" resultType="int">
		SELECT COUNT(DOC_NO) FROM EA_DOCUMENT
		WHERE USER_NO = #{userNo}
		  AND DOC_SEP = 'N' 
		  AND DOC_STAGE > 1
	</select>
	
</mapper>
