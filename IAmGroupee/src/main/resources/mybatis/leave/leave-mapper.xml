<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="leave">
  
  	<insert id="insertAlvFromEA">
  		INSERT INTO USAGE_LV (USER_NO, DOC_NO, LV_CODE, LV_START, LV_END, LV_REASON)
        (
            SELECT 
                D.USER_NO,
  				D.DOC_NO,
  				D.LV_CODE,
  				D.ALV_START,
  				D.ALV_END,
				D.ALV_REASON
			FROM EA_DOCUMENT D  			
  			JOIN EA_PROCESS P
  			ON (D.PROC_NO = P.PROC_NO)
  			WHERE P.PROC_NO = ${procNo}
  			AND D.LV_CHECK = 'A'
			AND D.DOC_SEP = 'Y'
  		)
  	</insert>
  
  	<insert id="insertLvFromEA">
  		INSERT INTO USAGE_LV (USER_NO, DOC_NO, LV_CODE, LV_START, LV_END, LV_REASON)
        (
            SELECT 
                D.USER_NO,
  				D.DOC_NO,
  				D.LV_CODE,
  				D.LV_START,
  				D.LV_END,
				D.LV_REASON
			FROM EA_DOCUMENT D  			
  			JOIN EA_PROCESS P
  			ON (D.PROC_NO = P.PROC_NO)
  			WHERE P.PROC_NO = ${procNo}
  			AND D.PROC_NO = ${procNo}
  			AND D.LV_CHECK = 'B'
			AND D.DOC_SEP = 'Y'
  		)
  	
  	</insert>
  
    <select id="getThisUser" resultType="user">
    	SELECT IU.*, D.DEPARTMENT_NAME, P.POSITION_NAME FROM IAG_USER IU
    	JOIN DEPARTMENT D ON (IU.DEPARTMENT_NO = D.DEPARTMENT_NO)
    	JOIN POSITION P ON (IU.POSITION_NO = P.POSITION_NO)
    	WHERE IU.USER_NO = #{userNo} 
    </select>
  
    <select id="getAllUserInfo" resultType="user">
    	SELECT * FROM IAG_USER IU
    </select>
  
    <select id="getAllUserAD" parameterType="hashmap" resultType="user">
   		SELECT * FROM 
   			( 
   				SELECT ROWNUM RN, U.* 
   				FROM 
   				( 
   					SELECT IU.*, D.DEPARTMENT_NAME, P.POSITION_NAME 
   					FROM IAG_USER IU 
					JOIN DEPARTMENT D ON (IU.DEPARTMENT_NO = D.DEPARTMENT_NO) 
					JOIN POSITION P ON (IU.POSITION_NO = P.POSITION_NO)
				) U
   			) WHERE RN BETWEEN #{startRow} AND #{endRow}
    </select>
    
    <select id="getRowCntAD" resultType="int">
    	SELECT COUNT(*)
    	FROM IAG_USER
    	WHERE ACTIVITY_YN = 'Y'
    </select>
    
    <select id="getAllAlvUsage" resultType="user">
    	SELECT IU.* FROM IAG_USER IU
    	WHERE IU.USER_NO = #{userNo}
    </select>
    
    <select id="getAllUsage" resultType="lvList">
    	SELECT UL.*, L.LV_NAME, IU.NAME, D.DEPARTMENT_NAME FROM LEAVE L
    	JOIN USAGE_LV UL ON (L.LV_CODE = UL.LV_CODE)
    	JOIN IAG_USER IU ON (UL.USER_NO = IU.USER_NO)
    	JOIN DEPARTMENT D ON (IU.DEPARTMENT_NO = D.DEPARTMENT_NO)
    	WHERE IU.USER_NO = #{userNo} AND UL.LV_END &lt; SYSDATE AND UL.USE_THIS_YEAR = 'Y'
    	ORDER BY UL.LV_END DESC
    </select>
    
    <select id="getWillUsage" resultType="lvList">
    	SELECT UL.*, L.LV_NAME, IU.NAME, D.DEPARTMENT_NAME FROM LEAVE L
    	JOIN USAGE_LV UL ON (L.LV_CODE = UL.LV_CODE)
    	JOIN IAG_USER IU ON (UL.USER_NO = IU.USER_NO)
    	JOIN DEPARTMENT D ON (IU.DEPARTMENT_NO = D.DEPARTMENT_NO)
    	WHERE IU.USER_NO = #{userNo} AND UL.LV_END &gt; SYSDATE AND UL.USE_THIS_YEAR = 'Y'
    	ORDER BY UL.LV_END DESC
    </select>
    
    
    <select id="getAlvUsageCal" resultType="lvList">
    	SELECT UL.*, L.LV_NAME, IU.NAME, D.DEPARTMENT_NAME FROM LEAVE L
    	JOIN USAGE_LV UL ON (L.LV_CODE = UL.LV_CODE)
    	JOIN IAG_USER IU ON (UL.USER_NO = IU.USER_NO)
    	JOIN DEPARTMENT D ON (IU.DEPARTMENT_NO = D.DEPARTMENT_NO)
    	WHERE IU.USER_NO = #{userNo} AND UL.LV_CODE LIKE 'ALV%' 
    	AND UL.LV_END BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE, -12), 'yyyy-mm-dd') 
    	AND TO_CHAR(SYSDATE-1, 'yyyy-mm-dd') AND UL.USE_THIS_YEAR = 'Y'
    	ORDER BY UL.LV_END ASC
    </select>
  
    <select id="getAlvListCalen" resultType="lvList"> <!-- 오류없으면 삭제 -->
    	SELECT * FROM USAGE_LV UL
    	JOIN LEAVE L ON (UL.LV_CODE = L.LV_CODE)
    	WHERE UL.USER_NO = #{userNo} AND UL.LV_CODE LIKE 'ALV%'	AND UL.LV_END &lt; SYSDATE
    	ORDER BY UL.LV_END DESC
    </select>
  
    <select id="getLvListCalen" resultType="lvList"> <!-- 오류없으면 삭제 -->
    	SELECT * FROM USAGE_LV UL
    	JOIN LEAVE L ON (UL.LV_CODE = L.LV_CODE)
    	WHERE UL.USER_NO = #{userNo} AND UL.LV_CODE LIKE 'LV%' AND UL.LV_END &lt; SYSDATE
    	ORDER BY UL.LV_END DESC
    </select>
  
    <select id="getAlvList" resultType="lvList">
	    SELECT * FROM 
	    	(
	    		SELECT ROWNUM RN, ALV.*
		    	FROM 
		    	(
			    	SELECT * FROM USAGE_LV UL
			    	JOIN LEAVE L ON (UL.LV_CODE = L.LV_CODE)
			    	WHERE UL.USER_NO = #{userNo} AND UL.LV_CODE LIKE 'ALV%'	AND UL.LV_END &lt; SYSDATE AND UL.USE_THIS_YEAR = 'Y'
			    	ORDER BY UL.LV_END DESC
		    	) ALV
	    	) WHERE RN BETWEEN #{pageVoAlv.startRow} AND #{pageVoAlv.endRow}
    </select>
  
    <select id="getLvList" resultType="lvList">
	    SELECT * FROM 
	    	(
	    		SELECT ROWNUM RN, LV.*
		    	FROM 
		    	(
			    	SELECT * FROM USAGE_LV UL
			    	JOIN LEAVE L ON (UL.LV_CODE = L.LV_CODE)
			    	WHERE UL.USER_NO = #{userNo} AND UL.LV_CODE LIKE 'LV%' AND UL.LV_END &lt; SYSDATE AND UL.USE_THIS_YEAR = 'Y'
			    	ORDER BY UL.LV_END DESC
		    	) LV
	    	) WHERE RN BETWEEN #{pageVoAlv.startRow} AND #{pageVoAlv.endRow}
    	
    </select>
  
    <select id="getAlvRowCnt" resultType="int">
    	SELECT COUNT(*) FROM USAGE_LV UL
    	JOIN LEAVE L ON (UL.LV_CODE = L.LV_CODE)
    	WHERE UL.USER_NO = #{userNo} AND UL.LV_CODE LIKE 'ALV%' AND UL.LV_END &lt; SYSDATE AND UL.USE_THIS_YEAR = 'Y'
    </select>
  
    <select id="getLvRowCnt" resultType="int">
    	SELECT COUNT(*) FROM USAGE_LV UL
    	JOIN LEAVE L ON (UL.LV_CODE = L.LV_CODE)
    	WHERE UL.USER_NO = #{userNo} AND UL.LV_CODE LIKE 'LV%' AND UL.LV_END &lt; SYSDATE AND UL.USE_THIS_YEAR = 'Y'
    </select>
  
    <select id="getLvTypeList" resultType="leave">
    	SELECT * FROM LEAVE
    	WHERE LV_CODE LIKE 'LV%'
    </select>
    
    <select id="checkExist" resultType="leave">
    	SELECT * FROM LEAVE
    	WHERE LV_CODE = #{lvCode}
    </select>
    
    <insert id="addLvType" parameterType="leave">
    	 INSERT INTO LEAVE
         VALUES
         (
         	#{lvCode},
         	#{lvName},
         	#{lvPaid},
         	0,
         	0,
         	#{lvContent}
         )
    </insert>
    
    <delete id="delLvType" parameterType="string">
    	DELETE LEAVE
    	WHERE LV_CODE = #{lvCode}
    </delete>
    
    <select id="getLvInfoList" resultType="lvInfo">
    	SELECT * FROM LV_BOARD
    	WHERE LVB_DEL = 'N'
    </select>
    
    <select id="lvInfoDetail" resultType="lvInfo">
    	SELECT * FROM LV_BOARD
    	WHERE LVB_NO = #{lvbNo}
    </select>
    
    <insert id="lvbEnroll" parameterType="lvInfo">
    	 INSERT INTO LV_BOARD
         VALUES
         (
         	SEQ_LV_BOARD.NEXTVAL,
         	#{lvbTitle},
         	DEFAULT,
         	#{lvbContent},
         	DEFAULT,
         	SYSDATE
         )
    </insert>
    
    <select id="getThisLvbNo" resultType="int">
    	SELECT LVB_NO FROM LV_BOARD
    	WHERE LVB_TITLE = #{lvbTitle} AND  LVB_DEL = 'N'
    </select>
    
    <select id="getThisLvbData" resultType="lvInfo">
    	SELECT * FROM LV_BOARD
    	WHERE LVB_TITLE = #{lvbTitle} AND  LVB_DEL = 'N'
    </select>
    
    <update id="lvbUpdate" parameterType="lvInfo">
    	UPDATE LV_BOARD SET
    	LVB_TITLE = #{lvbTitle}, LVB_CONTENT = #{lvbContent}, LVB_DATE = SYSDATE
    	WHERE LVB_NO = #{lvbNo}
    </update>
    
    <update id="lvbDelete" parameterType="lvInfo">
    	UPDATE LV_BOARD SET
    	LVB_DEL = 'Y'
    	WHERE LVB_NO = #{lvbNo}
    </update>
    
    <select id="getOccurHistory" resultType="lvHistory">
    	SELECT AOH.*, L.LV_NAME FROM ALV_OCCUR_HISTORY AOH
    	JOIN LEAVE L ON (AOH.LV_CODE = L.LV_CODE)
    	WHERE AOH.USER_NO = #{userNo}
    	ORDER BY AOH.ALV_OCCUR_DATE DESC
    </select>
    
    <update id="iagAddAlvCount" parameterType="hashmap">
    	UPDATE IAG_USER SET
    	ALV_ADD_COUNT = ALV_ADD_COUNT + #{alvAddCount}
    	WHERE USER_NO = #{userNo}
    </update>
    
    <insert id="insertOccurHistory" parameterType="hashmap">
    	INSERT INTO ALV_OCCUR_HISTORY
    	VALUES
    	(
    		#{userNo},
    		'ALV_05',
    		#{alvOccurCount},
    		SYSDATE,
    		#{alvOccurReason}
    	)
    </insert>
    
    <select id="getThisDeptUserAD" resultType="user">
    	SELECT IU.*, D.DEPARTMENT_NAME, P.POSITION_NAME FROM IAG_USER IU
    	JOIN DEPARTMENT D ON (IU.DEPARTMENT_NO = D.DEPARTMENT_NO)
    	JOIN POSITION P ON (IU.POSITION_NO = P.POSITION_NO)
    	WHERE IU.DEPARTMENT_NO = #{departmentNo} 
    </select>
    

    <!-- //////////////////////////////////////////////// -->
    	<!-- ATTENDANCE -->
	    <resultMap type="attendance" id="attendrm">
			<result property="attend_num" column="ATTEND_NUM"/>
			<result property="user_no" column="USER_NO"/>
			<result property="user_name" column="USER_NAME"/>
			<result property="attend_date" column="ATTEND_DATE"/>
			<result property="normal_check" column="NORMAL_CHECK"/>
			<result property="irregular_reason" column="IRREGULAR_REASON"/>
			<result property="work_numofdate" column="WORK_NUMOFDATE"/>
		</resultMap>
  	   
  	   <insert id="attendtempInsert" parameterType="attendance">
	  		INSERT INTO ATTENDANCE
	  		(
			    ATTEND_NUM,
			    USER_NO,
			    USER_NAME,
			    ATTEND_DATE,
			    NORMAL_CHECK,
			    IRREGULAR_REASON
	  		)
	  		VALUES
	  		(
	  			SEQ_ATTENDANCE.NEXTVAL,
	  			#{user_no},
	  			#{user_name},
	  			#{attend_date},
	  			'Y',	  			
	  			'--'
	  		)
	  	</insert>
	  	
	  	<select id="checkOverEighty" parameterType="hashmap" resultType="int">
	  		SELECT COUNT(*) FROM ATTENDANCE
		  	WHERE USER_NO = #{userNo} 
		  	AND NORMAL_CHECK = 'Y'
		  	AND ATTEND_DATE BETWEEN TO_DATE(#{start}, 'YY-MM-DD') AND TO_DATE(#{end}, 'YY-MM-DD')
	  	</select>
    
    <!-- 연차 생성 로직 부분 -->
    
    <!-- 연차 생성 전 리셋 -->
    <update id="resetIagUserAlv" parameterType="string">
    	UPDATE IAG_USER SET
    	ALV_COUNT = 0,
    	MLV_COUNT = 0,
    	ALV_USED_COUNT = 0,
    	ALV_LEFT_COUNT = 0,
    	ALV_ADD_COUNT = 0
    	WHERE USER_NO = #{userNo}
    </update>
    
	<delete id="resetAlvHistory" parameterType="string">
		DELETE ALV_OCCUR_HISTORY
		WHERE USER_NO = #{userNo}
	</delete>
    
    <update id="resetUsageLv" parameterType="hashmap">
    	UPDATE USAGE_LV SET
    	USE_THIS_YEAR = 'N'
    	WHERE USER_NO = #{userNo} AND
    	LV_END BETWEEN TO_DATE(ADD_MONTHS(TO_DATE(#{todayDate},'YY-MM-DD'), -12), 'YY-MM-DD') AND TO_DATE(#{todayDate}, 'YY-MM-DD')
    </update>
   
    <select id="checkOccuredAlvToday" parameterType="hashmap" resultType="int">
    	SELECT COUNT(*) FROM ALV_OCCUR_HISTORY
    	WHERE USER_NO = #{userNo} AND TO_CHAR(ALV_OCCUR_DATE, 'YY/MM/DD') = TO_CHAR(TO_DATE(#{todayDate}, 'YY/MM/DD'), 'YY/MM/DD') AND LV_CODE = 'ALV_00'
    </select>
    
    <update id="createAlvCount" parameterType="hashmap">
    	UPDATE IAG_USER SET
    	ALV_COUNT = #{createAlvCount}
    	WHERE USER_NO = #{userNo}
    </update>
    
    <insert id="addAlvHistory" parameterType="hashmap">
    	INSERT INTO ALV_OCCUR_HISTORY
    	VALUES
    	(
    		#{userNo},
    		'ALV_00',
    		#{createAlvCount},
    		SYSDATE,
    		'1년 이상 근로자 연차 발생'
    	)
    </insert>
   
    <select id="checkOccurMlvToday" parameterType="hashmap" resultType="int">
    	SELECT COUNT(*) FROM ALV_OCCUR_HISTORY
    	WHERE USER_NO = #{userNo} AND TO_CHAR(ALV_OCCUR_DATE, 'YY/MM/DD') = TO_CHAR(TO_DATE(#{todayDate}, 'YY/MM/DD'), 'YY/MM/DD') AND LV_CODE = 'ALV_04'
    </select>
    
    <select id="checkAttendAll" parameterType="hashmap" resultType="int">
	  		SELECT COUNT(*) FROM ATTENDANCE
		  	WHERE USER_NO = #{userNo} 
		  	AND NORMAL_CHECK = 'Y'
		  	AND ATTEND_DATE BETWEEN TO_DATE(ADD_MONTHS(TO_DATE(#{todayDate},'YY-MM-DD'), -1), 'YY-MM-DD') AND TO_DATE(#{todayDate}, 'YY-MM-DD')-1
	</select>
    
    <update id="addMlvCount" parameterType="string">
    	UPDATE IAG_USER SET
    	MLV_COUNT = MLV_COUNT + 1
    	WHERE USER_NO = #{userNo}
    </update>
    
    <insert id="addMlvHistory" parameterType="string">
    	INSERT INTO ALV_OCCUR_HISTORY
    	VALUES
    	(
    		#{userNo},
    		'ALV_04',
    		1,
    		SYSDATE,
    		'이전달 개근에 의한 월차 발생'
    	)
    </insert>
  	
  	<update id="updateReduceAlv01">
        UPDATE USAGE_LV
        SET REDUCE_ALV = 1
        WHERE LV_CODE = 'ALV_01'	    
  	</update>
  	
  	<update id="updateReduceAlv02">
        UPDATE USAGE_LV
        SET REDUCE_ALV = 0.5
        WHERE LV_CODE = 'ALV_02'
  	</update>
  	
  	<update id="updateReduceAlv03">
        UPDATE USAGE_LV
        SET REDUCE_ALV = 0.25
        WHERE LV_CODE = 'ALV_03'
  	</update>

    <select id="getAlvUsedCount" resultType="double">
    	SELECT SUM(REDUCE_ALV) FROM USAGE_LV
    	WHERE USER_NO = #{userNo}
    	AND LV_CODE LIKE 'ALV%'
    	AND USE_THIS_YEAR = 'Y'
    </select>
    
    
    
    
    
    
    
    
  </mapper>